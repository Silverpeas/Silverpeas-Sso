#
# Copyright (C) 2000 - 2019 Silverpeas
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# As a special exception to the terms and conditions of version 3.0 of
# the GPL, you may redistribute this Program in connection with Free/Libre
# Open Source Software ("FLOSS") applications as described in Silverpeas's
# FLOSS exception.  You should have received a copy of the text describing
# the FLOSS exception, and it is also available here:
# "https://www.silverpeas.org/legal/floss_exception.html"
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

# SAML can be used with different kind of Silverpeas's domain types.
# This parameter precises for which domain types the SAML is used.
# Possible values: GOOGLE
silverpeas.domain.type=GOOGLE
# X must be replaced by the identifier of the right Silverpeas's domain
domain.X.saml.sso.service.url=
domain.X.saml.artifact.resolution.service.url=
# Indicating optionally here the keystore elements of the SP in order to sign the requests.
domain.X.saml.sp.keystore.path=
domain.X.saml.sp.keystore.pwd=
domain.X.saml.sp.keystore.entryId=
domain.X.saml.sp.keystore.entryPwd=
# It is also possible (mandatory if no keystore specified whereas request MUST be signed) to specify
# manually the path to the public certificate provided by SP with the private key
# and its optional passphrase.
domain.X.saml.sp.public.certificate.path=
domain.X.saml.sp.private.key.path=
domain.X.saml.sp.private.key.pass=
# Indicating an optional path of the XML metadata file provided by IDP.
domain.X.saml.idp.xml.metadata.path=
# It is also possible (mandatory if no XML metadata specified) to specify manually the path to the
# certificate provided by IDP.
domain.X.saml.idp.public.certificate.path=
# specific rules
domain.X.saml.assertion.condition.notBefore.enabled=true
domain.X.saml.assertion.condition.notOnOrAfter.enabled=true
domain.X.saml.ac.comparison=
domain.X.saml.ac.class=
# default domain handled by the SAML SSO authentication module
saml.silverpeas.default.domain.id = X
